package com.example.zim.viewModels

import ai.onnxruntime.OnnxTensor
import ai.onnxruntime.OrtEnvironment
import ai.onnxruntime.OrtSession
import android.app.Application
import android.content.Context
import android.hardware.Sensor
import android.hardware.SensorEvent
import android.hardware.SensorEventListener
import android.hardware.SensorManager
import android.util.Log
import android.widget.Toast
import androidx.activity.ComponentActivity.SENSOR_SERVICE
import androidx.core.content.ContextCompat.getSystemService
import androidx.lifecycle.ViewModel
import androidx.lifecycle.viewModelScope
import androidx.lifecycle.viewmodel.compose.viewModel
import com.example.zim.api.ActiveUserManager
import com.example.zim.api.AlertData
import com.example.zim.api.ClientRepository
import com.example.zim.data.room.Dao.AlertDao
import com.example.zim.data.room.Dao.UserDao
import com.example.zim.data.room.models.Alerts
import com.example.zim.helperclasses.AlertType
import com.example.zim.states.ConnectionsState
import com.example.zim.states.FallDetectionState
import dagger.hilt.android.lifecycle.HiltViewModel
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.delay
import kotlinx.coroutines.flow.MutableStateFlow
import kotlinx.coroutines.flow.SharingStarted
import kotlinx.coroutines.flow.StateFlow
import kotlinx.coroutines.flow.stateIn
import kotlinx.coroutines.flow.update
import kotlinx.coroutines.launch
import org.apache.commons.math3.transform.DftNormalization
import org.apache.commons.math3.transform.FastFourierTransformer
import org.apache.commons.math3.transform.TransformType
import java.time.LocalDateTime
import javax.inject.Inject
import kotlin.math.abs
import kotlin.math.pow
import kotlin.math.sqrt


@HiltViewModel
class FallDetectionViewModel @Inject constructor(
    val application: Application,
    val userDao: UserDao,
    val alertDao: AlertDao,
    val clientRepository: ClientRepository,
    val activeUserManager: ActiveUserManager
) : ViewModel(), SensorEventListener {


    private val _state = MutableStateFlow(FallDetectionState())

    val state: StateFlow<FallDetectionState> = _state.stateIn(
        viewModelScope,
        SharingStarted.WhileSubscribed(stopTimeoutMillis = 5000),
        FallDetectionState()
    )
    private val meanArray = floatArrayOf(
        1.6418100929257502f, 2.3303889437215637f, 1.7351686581527097f, 13.772294131027596f,
        3.4684344498347697f, 7.9804239066585705f, 3.7797699809394287f, -0.04116200113241134f,
        0.11533739479469848f, 0.33092778310414195f, 1.5691070700922725f, 1.401081694244498f,
        2.1160457712040177f, 0.6910203050534983f, 0.6691304873199629f, 0.4410601416658173f,
        1.394856546949643f, 0.7000793124819371f, 0.6866497132689007f, 0.44741325068853394f,
        -0.17941408160642625f, -0.010643754971751719f, -0.09020619194043708f, 1.7887618232469864f,
        2.65081253242727f, 2.1718262630631986f
    )
    private val stdArray = floatArrayOf(

        1.6872932284731876f, 2.598433417936135f, 1.6873538275304052f, 1.796950977081903f,
        2.331569517026537f, 3.489721469206532f, 2.6472993056228797f, 0.858984890019558f,
        0.8413814331048338f, 1.0141025414050826f, 3.908550681184858f, 4.774124117892085f,
        5.350656253553282f, 0.696575879979791f, 0.7019355572988154f, 0.4819861926660918f,
        1.4243852968758546f, 0.6981842495329723f, 0.7131424334371129f, 0.48298061740698567f,
        0.9940775503671047f, 1.0069765786917517f, 1.0634343246311944f, 6.986622691612793f,
        10.26473555499198f, 11.401863715217308f
    )
    private var acc_window_x_fixed = doubleArrayOf(
        0.41180268,
        0.5267244,
        0.009576807,
        0.20111294,
        0.22984336,
        0.10534488,
        0.58418524,
        0.076614454,
        0.25857377,
        0.48841715,
        0.79487497,
        1.532289,
        1.9153614,
        2.1068976,
        1.9632454,
        1.484405,
        1.4173675,
        1.4173675,
        1.5993267,
        1.8483237,
        2.1260512,
        2.3175871,
        2.7964275,
        2.7006595,
        2.6240451,
        2.6431987,
        2.7485435,
        3.0071173,
        3.3806129,
        3.4093432,
        3.1028855,
        2.8634653,
        2.815581,
        2.9592333,
        3.1028855,
        2.873042,
        2.4612393,
        1.9536686,
        1.2162545,
        0.47884035,
        -0.047884032,
        -0.36391866,
        -0.2681506,
        -0.32561144,
        -0.59376204,
        -0.80445176,
        -1.043872,
        -1.3215994,
        -1.7621324,
        -1.7621324,
        -1.8195933,
        -1.7046716,
        -1.5801731,
        -1.340753,
        -0.8619126,
        -0.29688102,
        0.20111294,
        0.32561144,
        0.63206923,
        -10.984597,
        4.280833,
        4.8458643,
        1.4556746,
        -2.9400797,
        -3.3039982,
        -3.5051112,
        -3.2465374,
        -2.3080103,
        -2.231396,
        -0.16280572,
        2.7964275,
        6.6271505,
        7.1155677,
        6.991069,
        6.2345014,
        5.2002063,
        3.5242648,
        1.6663644,
        0.10534488,
        -1.13964,
        -2.1739352,
        -4.0222588,
        -4.4436383,
        -4.357447,
        -3.8977604,
        -3.5625722,
        -3.2369606,
        -2.882619,
        -2.719813,
        -2.4708161,
        -2.0015526,
        -1.4173675,
        -0.92895025,
        -0.4309563,
        -0.50757074,
        -0.8331822,
        -0.30645782,
        0.17238252,
        0.009576807,
        -0.11492168,
        -0.019153614,
        -0.19153613,
        -1.1013328,
        -1.6089035,
        -2.2218192,
        -3.5434184,
        -6.14831,
        -9.270349,
        -12.200851,
        -14.441825,
        -15.275007,
        -15.045163,
        -14.709975,
        -14.729129,
        -15.006856,
        -15.217546,
        -15.284584,
        -12.823344,
        -11.779472,
        -11.386824,
        -11.291056,
        -11.405977,
        -11.597513,
        -11.9135475,
        -12.698846,
        -14.240712,
        -17.84159,
        -18.684351,
        -19.10573,
        -18.693928,
        -17.228676,
        -13.685257,
        -11.674128,
        -9.509769,
        -7.3645644,
        -5.391742,
        -2.7964275,
        -2.1260512,
        -1.7525556,
        -1.7046716,
        -2.0398598,
        -2.5474305,
        -2.8921957,
        -3.016694,
        -3.074155,
        -3.217807,
        -3.5913026,
        -4.7022123,
        -5.2480903,
        -5.7843914,
        -6.2632318,
        -6.6367273,
        -6.9719152,
        -7.2783732,
        -7.5082164,
        -7.6614456,
        -7.872135,
        -7.8146744,
        -8.101978,
        -8.111555,
        -7.3166804,
        -6.2823853,
        -5.5641246,
        -5.2385135,
        -5.2002063,
        -5.257667,
        -5.257667,
        -5.2863975,
        -5.401319,
        -5.659893,
        -5.947197,
        -6.2728086,
        -6.8091097,
        -6.943185,
        -7.067683,
        -7.2592196,
        -7.393295,
        -7.632715,
        -7.776367,
        -7.824251,
        -7.8529816,
        -7.9104424,
        -7.920019,
        -7.9391727,
        -7.8625584,
        -7.632715,
        -7.469909,
        -7.5944076,
        -7.6710224,
        -7.699753,
        -7.632715,
        -7.642292,
        -7.680599,
        -7.6135616,
        -7.575254,
        -7.536947,
        -7.489063,
        -7.4603324,
        -7.393295,
        -7.3071036,
        -7.2783732,
        -7.1826053,
        -7.0581064,
        -6.8761473,
        -6.789956,
        -6.7229185,
        -6.799533,
        -6.943185,
        -7.153875,
        -7.0102224,
        -7.1730285,
        -7.28795,
        -7.240066,
        -7.019799,
        -6.799533,
        -6.579266,
        -6.493075,
        -6.4643445,
        -6.4643445,
        -6.5026517,
        -6.5696893,
        -6.6175733,
        -6.6175733,
        -6.789956,
        -7.2113357,
        -7.2783732,
        -7.28795,
        -7.3071036,
        -7.345411,
        -7.431602,
        -7.4603324,
        -7.4507556,
        -7.441179,
        -7.374141,
        -7.326257,
        -7.3071036,
        -7.2687964,
        -7.249643,
        -7.2304893
    )
    private var acc_window_y_fixed = doubleArrayOf(
        9.854534,
        9.854534,
        9.682152,
        9.768343,
        9.662998,
        9.797073,
        9.375694,
        4.999093,
        4.7309427,
        4.510676,
        4.357447,
        4.4436383,
        4.9799395,
        5.9567738,
        6.742072,
        8.130709,
        8.848969,
        9.634268,
        10.601525,
        11.626244,
        12.229582,
        12.210428,
        11.300632,
        10.620679,
        10.055647,
        9.624691,
        9.059659,
        8.561666,
        8.197746,
        7.929596,
        8.1881695,
        8.781932,
        9.394848,
        10.113108,
        10.773908,
        10.984597,
        10.5440645,
        10.0748005,
        9.586384,
        9.251195,
        8.973468,
        8.63828,
        8.590396,
        8.552089,
        8.494628,
        8.418014,
        8.37013,
        8.494628,
        9.040505,
        9.040505,
        9.059659,
        8.820239,
        8.475474,
        8.149862,
        7.9870567,
        8.1881695,
        9.050082,
        10.132261,
        13.350069,
        17.99482,
        18.770542,
        14.451402,
        8.992621,
        6.9527617,
        9.251195,
        10.333375,
        9.404425,
        3.323152,
        2.384625,
        3.7062242,
        4.817134,
        4.232949,
        3.9073372,
        4.146757,
        4.7884035,
        5.93762,
        7.469909,
        8.599973,
        10.247183,
        11.865664,
        12.698846,
        12.689269,
        12.038046,
        11.300632,
        10.582372,
        9.672575,
        8.571242,
        6.205771,
        5.2289367,
        4.4244847,
        3.8498764,
        3.2848446,
        2.8538885,
        2.9113493,
        3.821146,
        3.1028855,
        1.8483237,
        1.1204864,
        0.59376204,
        0.51714754,
        0.23942018,
        -0.08619126,
        -0.7278373,
        -1.0534488,
        -1.1779473,
        -1.0726024,
        -0.5746084,
        0.009576807,
        0.63206923,
        0.78529817,
        0.6991069,
        0.6799533,
        0.545878,
        0.18195933,
        0.009576807,
        0.05746084,
        0.40222588,
        1.5035586,
        1.9249382,
        1.9440918,
        1.5131354,
        0.94810385,
        0.4405331,
        -0.05746084,
        -0.47884035,
        -0.8619126,
        -1.484405,
        -1.6089035,
        -1.9440918,
        -2.6719291,
        -3.572149,
        -4.414908,
        -3.8307228,
        -3.074155,
        -2.2505496,
        -1.436521,
        -0.17238252,
        0.31603462,
        0.92895025,
        1.6089035,
        2.2218192,
        2.834735,
        3.3327289,
        3.5051112,
        3.3423057,
        3.0262709,
        2.7006595,
        2.327164,
        2.0973208,
        1.6950948,
        1.0821792,
        0.40222588,
        -0.24899697,
        -0.79487497,
        -1.1779473,
        -1.4173675,
        -1.6089035,
        -1.8674773,
        -2.1643584,
        -2.1452048,
        -1.4077905,
        -0.5363012,
        0.1340753,
        0.62249243,
        1.6280571,
        2.0111294,
        2.2601264,
        2.432509,
        2.6048915,
        2.7006595,
        2.7964275,
        2.8060043,
        2.528277,
        2.2409728,
        1.9153614,
        1.4460979,
        1.2162545,
        1.0151415,
        0.8619126,
        0.7374141,
        0.41180268,
        0.34476504,
        0.40222588,
        0.48841715,
        0.58418524,
        0.6991069,
        0.7565677,
        0.7757214,
        0.9864111,
        1.0630256,
        1.1013328,
        1.091756,
        1.0726024,
        1.0342951,
        1.0151415,
        0.9959879,
        0.90979666,
        0.8523358,
        0.7661445,
        0.7086837,
        0.61291564,
        0.50757074,
        0.34476504,
        0.11492168,
        0.076614454,
        0.11492168,
        0.22984336,
        0.45010993,
        0.79487497,
        1.0055647,
        1.0534488,
        1.1971009,
        1.292869,
        1.2737153,
        1.2162545,
        1.13964,
        1.091756,
        1.0534488,
        0.9959879,
        0.9959879,
        0.90979666,
        0.89064306,
        0.90979666,
        0.8619126,
        0.7086837,
        0.6799533,
        0.6512229,
        0.60333884,
        0.5746084,
        0.5746084,
        0.5554548,
        0.5554548,
        0.58418524,
        0.59376204,
        0.5650316,
        0.5267244,
        0.50757074,
        0.47884035,
        0.45968673
    )
    private var acc_window_z_fixed = doubleArrayOf(
        -1.2641385,
        -1.292869,
        -1.1013328,
        -1.5035586,
        -1.8100165,
        -1.6950948,
        -2.3175871,
        -1.6759412,
        -1.7525556,
        -1.8291701,
        -1.7621324,
        -1.6950948,
        -1.8004397,
        -2.0973208,
        -2.135628,
        -1.8291701,
        -1.9728222,
        -2.1547816,
        -2.2984335,
        -2.4229321,
        -2.4133554,
        -2.4133554,
        -2.27928,
        -2.5187001,
        -2.777274,
        -3.1316159,
        -3.5529952,
        -4.0701427,
        -4.5777135,
        -5.363012,
        -5.209783,
        -4.644751,
        -4.280833,
        -4.4244847,
        -4.5777135,
        -4.31914,
        -3.8881836,
        -3.5434184,
        -3.3135753,
        -3.2561142,
        -3.3901896,
        -3.2752678,
        -3.0262709,
        -2.6240451,
        -2.2697031,
        -1.8674773,
        -1.1971009,
        -0.38307226,
        1.2066777,
        1.2066777,
        1.8100165,
        1.8100165,
        1.4460979,
        0.8619126,
        0.18195933,
        -0.40222588,
        -1.1971009,
        -1.6950948,
        0.25857377,
        -13.589489,
        0.1436521,
        5.353435,
        2.72939,
        -3.6774938,
        -5.650316,
        -8.025364,
        -9.758766,
        -11.903971,
        -10.7356,
        -9.14585,
        -8.264784,
        -10.314221,
        -10.04607,
        -8.418014,
        -6.5026517,
        -4.4915223,
        -3.4476504,
        -3.7062242,
        -4.2042184,
        -4.405331,
        -3.323152,
        -1.9249382,
        -2.0398598,
        -2.2601264,
        -2.4037786,
        -2.2984335,
        -2.3463178,
        -2.528277,
        -2.5187001,
        -2.4612393,
        -2.384625,
        -2.2984335,
        -1.9536686,
        -0.46926352,
        0.63206923,
        0.6607997,
        0.038307227,
        0.32561144,
        1.0247183,
        1.6472107,
        2.5570073,
        3.3614593,
        4.865018,
        5.583278,
        6.5122285,
        7.565677,
        8.494628,
        8.829816,
        7.785944,
        5.48751,
        3.2369606,
        2.4037786,
        2.834735,
        3.8402996,
        4.9416323,
        5.6407394,
        5.755661,
        5.1140146,
        5.4300494,
        5.707777,
        5.947197,
        6.2728086,
        6.5984197,
        7.2113357,
        8.513782,
        10.036493,
        9.825804,
        6.7229185,
        3.667917,
        2.3175871,
        2.7868507,
        5.2480903,
        5.7748146,
        5.6982,
        5.6886234,
        6.14831,
        6.339846,
        6.4643445,
        6.6271505,
        6.742072,
        6.8665705,
        6.9719152,
        7.2113357,
        7.517793,
        7.833828,
        8.034941,
        7.967903,
        7.019799,
        6.483498,
        6.3589997,
        6.5601125,
        7.153875,
        7.747637,
        8.063671,
        8.054094,
        7.833828,
        7.431602,
        6.9719152,
        6.799533,
        6.6750345,
        6.5984197,
        6.6079965,
        6.694188,
        6.799533,
        6.8665705,
        6.9623384,
        7.0964136,
        7.201759,
        7.240066,
        7.1634517,
        7.0581064,
        6.981492,
        6.799533,
        6.703765,
        6.6079965,
        6.579266,
        6.4739213,
        6.339846,
        6.253655,
        6.301539,
        6.4739213,
        6.5026517,
        6.4164605,
        6.301539,
        6.215348,
        6.215348,
        6.291962,
        6.167464,
        5.985504,
        6.081272,
        6.157887,
        6.1387334,
        6.1195793,
        6.205771,
        6.3589997,
        6.3685765,
        6.445191,
        6.4739213,
        6.531382,
        6.5026517,
        6.531382,
        6.540959,
        6.5122285,
        6.435614,
        6.4643445,
        6.5505357,
        6.579266,
        6.6175733,
        6.38773,
        6.4547677,
        6.4547677,
        6.5122285,
        6.5601125,
        6.6271505,
        6.6750345,
        6.694188,
        6.646304,
        6.5984197,
        6.5696893,
        6.6079965,
        6.646304,
        6.646304,
        6.6846113,
        6.694188,
        6.5218053,
        6.5122285,
        6.5505357,
        6.579266,
        6.5601125,
        6.531382,
        6.5122285,
        6.445191,
        6.3781533,
        6.3111157,
        6.2632318,
        6.253655,
        6.2728086,
        6.3206925,
        6.2823853
    )
    private var gyro_window_x_fixed = doubleArrayOf(
        -9.357844,
        -9.357844,
        -1.1866057,
        -1.1884383,
        -1.1908818,
        -1.1994339,
        -1.1756102,
        -1.1594223,
        -1.1481212,
        -1.14018,
        -1.543351,
        -1.2373075,
        -1.2470814,
        -1.2406673,
        -1.2409728,
        -1.2455542,
        -1.2522738,
        -1.2476922,
        -1.171945,
        -1.0650436,
        -0.93676186,
        -0.79137594,
        -0.6560693,
        -0.52626044,
        -0.03359759,
        0.12461651,
        0.070554934,
        0.050396383,
        0.0720821,
        0.07513642,
        0.06078109,
        0.06994407,
        0.080634214,
        0.076052725,
        0.07422013,
        0.071776666,
        0.06688975,
        0.064446285,
        0.07086037,
        0.076358154,
        0.0842994,
        0.0842994,
        0.08093964,
        0.08124508,
        0.06841691,
        0.070249505,
        0.070249505,
        0.064446285,
        0.056199603,
        0.06780604,
        0.06414085,
        0.070554934,
        0.05955936,
        0.06505715,
        0.061391957,
        0.06688975,
        0.073303826,
        0.07544186,
        0.07819075,
        0.06994407,
        0.06566802,
        0.069027774,
        0.057726767,
        0.06780604,
        0.06872234,
        0.05589417,
        0.053145275,
        0.04886922,
        0.045814894,
        0.046731193,
        0.04886922,
        0.037873644,
        0.047647487,
        0.04642576,
        0.049480084,
        0.04795292,
        0.05467244,
        0.047036625,
        0.051618114,
        0.049785517,
        0.058337633,
        0.05467244,
        0.05222898,
        0.04917465,
        0.036957346,
        0.046120327,
        0.043982297,
        0.038789943,
        0.04184427,
        0.04184427,
        0.03634648,
        0.040011674,
        0.038179077,
        0.040011674,
        0.03604105,
        0.028710667,
        0.03726278,
        0.03023783,
        0.031154128,
        0.029626964,
        0.034208454,
        0.029626964,
        0.026267206,
        0.025045475,
        0.029626964,
        0.04062254,
        0.03634648,
        0.032986723,
        0.03573562,
        0.03176499,
        0.024129177,
        0.031154128,
        0.032070424,
        0.040927973,
        0.037873644,
        0.030543262,
        0.03634648,
        0.032070424,
        0.023823744,
        0.03390302,
        0.035430185,
        0.03604105,
        0.03573562,
        0.024740042,
        0.0290161,
        0.016493361,
        0.022296581,
        0.02687807,
        0.018020526,
        0.0015271631,
        0.0061086523,
        0.0018325958,
        0.005192355,
        0.009162978,
        0.00580322,
        0.00030543262,
        0.0018325958,
        0.00061086525,
        0.013439035,
        0.010079277,
        0.010995574,
        0.013439035,
        0.020158553,
        0.020463986,
        0.014049901,
        0.02107485,
        0.016493361,
        0.016798794,
        0.017104227,
        0.021991149,
        0.020463986,
        0.017715093,
        0.008246681,
        0.010995574,
        0.013133603,
        0.018020526,
        0.003970624,
        0.004276057,
        -0.0015271631,
        0.0021380284,
        -0.002443461,
        0.0027488936,
        0.013744468,
        0.014966198,
        0.010079277,
        0.009162978,
        0.029321533,
        0.027183503,
        0.028710667,
        0.027183503,
        0.026267206,
        0.010995574,
        0.0125227375,
        0.018020526,
        0.01160644,
        0.008857546,
        0.019242255,
        0.008246681,
        0.005192355,
        -0.0012217305,
        -0.0030543262,
        -0.013133603,
        -0.008552114,
        -0.011911872,
        -0.0061086523,
        -0.010079277,
        -0.0070249503,
        -0.009773844,
        -0.017715093,
        -0.013133603,
        -0.020158553,
        -0.0106901415,
        -0.01985312,
        -0.027488936,
        -0.028099801,
        -0.025350908,
        -0.036957346,
        -0.034513887,
        -0.04550946,
        -0.038789943,
        -0.054061573,
        -0.058337633,
        -0.06078109,
        -0.077579886,
        -0.06383542,
        -0.071776666,
        -0.0693332,
        -0.07574729,
        -0.07422013,
        -0.07971791,
        -0.08582657,
        -0.0888809,
        -0.08735373,
        -0.0842994,
        -0.092240654,
        -0.08827003,
        -0.09560041,
        -0.103847094,
        -0.1133155,
        -0.113926366,
        -0.12156218,
        -0.124311075,
        -0.122478485,
        -0.12003502,
        -0.12705997,
        -0.12339478,
        -0.1160644,
        -0.105068825,
        -0.099571034,
        -0.09590584,
        -0.096516706,
        -0.09254608,
        -0.09773844,
        -0.1001819,
        -0.10170906,
        -0.10323623,
        -0.096516706,
        -0.10751228,
        -0.100792766,
        -0.09743301,
        -0.099265605,
        -0.10629055,
        -0.106901415,
        -0.11942416,
        -0.12064589,
        -0.116675265,
        -0.1133155,
        -0.11942416,
        -0.11728613,
        -0.116675265,
        -0.10720685,
        -0.118202426,
        -0.115453534,
        -0.121256754,
        -0.13836098,
        -0.14844026,
        -0.15332718,
        -0.16829337,
        -0.18081611,
        -0.18478674,
        -0.19333886,
        -0.18570304,
        -0.1881465,
        -0.19242255,
        -0.18417588,
        -0.17348573,
        -0.16584991,
        -0.17073683,
        -0.14569137,
        -0.12034045,
        -0.10262536,
        -0.06841691,
        -0.035124753,
        -0.011911872,
        0.05131268,
        0.06627888,
        0.121256754,
        0.16371189,
        0.21288654,
        0.2687807,
        0.3213151,
        0.39187005,
        0.46395215,
        0.54092115,
        0.5897904,
        0.659429,
        0.7134906,
        0.7623598,
        0.8032878,
        0.838718,
        0.8744536,
        0.9025534,
        0.91538155,
        0.956615,
        1.0048733,
        1.033584,
        1.0390818,
        1.0305296,
        1.0067059,
        0.9776898,
        0.9324858,
        0.88178396,
        0.8384125,
        0.79412484,
        0.7602218,
        0.70829827,
        0.6713409,
        0.6398814,
        0.6236934,
        0.61178154,
        0.6291912,
        0.63071835,
        0.6395759,
        0.6792821,
        0.7312057,
        0.7654142,
        0.7892379,
        0.79473567,
        0.8078693,
        0.79626286,
        0.79137594,
        0.7632761,
        0.6957755,
        0.6072,
        0.4896085,
        0.39064834,
        0.30482176,
        0.25809056,
        0.27275133,
        0.31490102,
        0.35643986,
        0.38331795,
        0.4269948,
        0.46700647,
        0.4373795,
        0.41508293,
        0.36285394,
        0.3023783,
        0.24465153,
        0.19486602,
        0.15882497,
        0.13652839,
        0.13897185,
        0.14752395,
        0.18387043,
        0.22449298,
        0.2779437,
        0.3042109,
        0.3109304,
        0.30268374,
        0.28588495,
        0.28771752,
        0.2919936,
        0.28527406,
        0.27885997,
        0.26389378,
        0.26328292,
        0.267559,
        0.29718593,
        0.3390302,
        0.38637227,
        0.43493605,
        0.5002986,
        0.5503896,
        0.6096435,
        0.6618725,
        0.7174612,
        0.7867944,
        0.8472701,
        0.890947,
        0.9309586,
        0.93401295,
        0.9431759,
        0.93279123,
        0.8723156,
        0.7816021,
        0.6453791,
        0.49327368,
        0.35369098,
        0.18661933,
        0.03481932,
        -0.09743301,
        -0.21044308,
        -0.31978795,
        -0.39736784,
        -0.4596761,
        -0.5222898,
        -0.57757306,
        -0.6575964,
        -0.7507534,
        -0.79259765,
        -0.89552844,
        -0.93554014,
        -0.9117164,
        -0.8170323,
        -0.7476991,
        -0.77213365,
        -0.66553766,
        0.20341812,
        1.881465,
        3.2974505,
        4.246735,
        4.5188756,
        3.1829133,
        1.8463402,
        0.9306532,
        0.018936822,
        -0.95417154,
        -1.8356501,
        -2.4996605,
        -2.7253752,
        -2.9465084,
        -2.971554,
        -2.967278,
        -3.0213394,
        -3.08884,
        -3.1700852,
        -3.196047,
        -3.1548135,
        -2.947425,
        -2.6007588,
        -2.204002,
        -1.8875736,
        -1.6844609,
        -1.5903877,
        -1.5091426,
        -1.4236214,
        -1.3029755,
        -1.1417072,
        -1.0644327,
        -0.9419542,
        -0.893085,
        -0.93523467,
        -1.0372492,
        -1.1652255,
        -1.2596041,
        -1.3631458,
        -1.4926492,
        -1.6560557,
        -1.8399261,
        -2.044566,
        -2.2046127,
        -2.2721133,
        -2.2840252,
        -2.237294,
        -2.1584923,
        -2.0650299,
        -2.0030272,
        -1.9911152,
        -1.9926424,
        -2.0152445,
        -2.0772474,
        -2.1517727,
        -2.17804,
        -2.175902,
        -2.1621575,
        -2.186592,
        -2.2553146,
        -2.3518312,
        -2.4471262,
        -2.5130997,
        -2.5195136,
        -2.499966,
        -2.4544566,
        -2.406809,
        -2.3747387,
        -2.3570235,
        -2.3612995,
        -2.3732114,
        -2.413834,
        -2.459038,
        -2.521041,
        -2.5851817,
        -2.6187794,
        -2.629164,
        -2.617252,
        -2.6273315,
        -2.6716192,
        -2.747061,
        -2.812118,
        -2.8707612,
        -2.9898798,
        -3.1816916,
        -3.3072245,
        -3.245527,
        -3.0185907,
        -2.7550023,
        -2.5378397,
        -2.3851233,
        -2.312125,
        -2.151162,
        -2.1071796,
        -2.0024164,
        -1.9205604,
        -1.8460348,
        -1.7773124,
        -1.7012597,
        -1.6300939,
        -1.5534303,
        -1.4779885,
        -1.3997977,
        -1.3118331,
        -1.2018774,
        -1.0867293,
        -0.9767735,
        -0.8793405,
        -0.7996226,
        -0.7703011,
        -0.7324274,
        -0.7620544,
        -0.8170323,
        -0.91813046,
        -1.0558805,
        -1.2030991,
        -1.3246613,
        -1.4074335,
        -1.4333953,
        -1.4666874,
        -1.4602734,
        -1.4489723,
        -1.4498887,
        -1.466382,
        -1.5015068,
        -1.539075,
        -1.5586227,
        -1.4905112,
        -1.393689,
        -1.3338243,
        -1.2043208,
        -1.0662653,
        -0.9960158,
        -1.0152581,
        -1.0375546,
        -1.0616838,
        -1.0531317,
        -1.0445796,
        -1.0662653,
        -1.0708468,
        -1.0952814,
        -1.094976,
        -1.0812315,
        -1.0760391,
        -1.0757337,
        -1.1032226,
        -1.1850786,
        -1.3011429,
        -1.3888022,
        -1.570229,
        -1.7589865,
        -1.9165897,
        -2.0378466,
        -2.0793853,
        -2.014939,
        -1.8842138,
        -1.6676621,
        -1.3952162,
        -1.0793989,
        -0.74006325,
        -0.3924809,
        -0.09010262,
        0.16920967,
        0.3894266,
        0.55833083,
        0.70157874,
        0.7984009,
        0.8564331,
        0.8875872,
        0.91721416,
        0.9456194,
        0.96669424,
        0.9761627,
        0.9950995,
        1.0231993,
        1.0173961,
        0.9767735,
        0.9251554,
        0.8524625,
        0.75319684,
        0.63621616,
        0.51068336,
        0.3631594,
        0.21960606,
        0.07727446,
        -0.059864793,
        -0.17012598,
        -0.2657264,
        -0.30207285,
        -0.37568212,
        -0.4382958,
        -0.50488013,
        -0.56046885,
        -0.6249151,
        -0.6575964,
        -0.67164636,
        -0.66737026,
        -0.62858033,
        -0.5726862,
        -0.4990769,
        -0.39461896,
        -0.29046643,
        -0.20066923,
        -0.11178834,
        -0.04428773,
        0.02443461,
        0.057421334,
        0.07360926,
        0.081855945,
        0.07574729,
        0.05589417,
        0.046120327,
        0.004581489,
        -0.033292156,
        -0.053145275,
        -0.0852157,
        -0.12095132,
        -0.15088372,
        -0.16065755,
        -0.15027285,
        -0.14813483,
        -0.13775012,
        -0.108123146,
        -0.061391957,
        -0.02321288,
        0.029626964,
        0.051923547,
        0.06566802,
        0.08307768,
        0.08246681,
        0.099571034,
        0.10262536,
        0.10598512,
        0.09773844,
        0.086132,
        0.06352998,
        0.032375857,
        0.009468411,
        -0.01740966,
        -0.054367006,
        -0.06719518,
        -0.08460484,
        -0.09285152,
        -0.09101892,
        -0.098043874,
        -0.108123146,
        -0.10445796,
        -0.110872045,
        -0.11178834,
        -0.10476339,
        -0.09101892,
        -0.06719518,
        -0.046120327,
        -0.025045475,
        -0.014049901,
        0.0033597588,
        0.0070249503,
        -0.0067195175,
        -0.015577064,
        -0.03756821,
        -0.062308256,
        -0.09468412,
        -0.13408493,
        -0.16982053,
        -0.19120082,
        -0.19975294,
        -0.22296582,
        -0.23335053,
        -0.23945917,
        -0.23579398,
        -0.23609942,
        -0.22021692,
        -0.2012801,
        -0.17959438,
        -0.17806722,
        -0.16523905,
        -0.16982053,
        -0.1731803,
        -0.17989981,
        -0.1740966,
        -0.17562376,
        -0.15943582,
        -0.1459968,
        -0.1255328,
        -0.098043874,
        -0.08277224,
        -0.070249505,
        -0.028099801,
        -0.011911872,
        -0.016187929,
        -0.0067195175,
        -0.0015271631,
        -0.0015271631,
        -0.01160644,
        -0.012217305,
        -0.018325957,
        -0.0125227375,
        -0.02687807,
        -0.025350908,
        -0.02565634,
        -0.023823744,
        -0.027488936,
        -0.025350908,
        -0.02443461,
        -0.023823744,
        -0.021380283,
        -0.021380283,
        0.004581489,
        0.009468411,
        0.0143553335,
        0.0076358155,
        0.015271631,
        0.013133603,
        0.01160644,
        0.013133603,
        0.021685716,
        0.010995574,
        0.0027488936,
        0.01038471,
        0.007941248,
        0.009468411,
        0.005497787,
        0.00580322,
        0.0012217305,
        0.008246681,
        0.0076358155,
        0.009162978,
        0.0036651916,
        0.003970624,
        0.010995574,
        0.0143553335,
        0.017104227,
        0.0021380284,
        -0.007941248,
        -0.004276057,
        -0.022907447,
        -0.02443461,
        -0.035430185,
        -0.02687807,
        -0.02565634,
        -0.0143553335,
        -0.014049901,
        -0.02565634,
        -0.03756821,
        -0.049480084,
        -0.04886922,
        -0.05009095,
        -0.027794369,
        -0.019547688,
        -0.010995574,
        0.008552114,
        0.009773844,
        0.016187929,
        0.027488936,
        0.03145956,
        0.03023783,
        0.0290161,
        0.014049901,
        0.0027488936,
        0.0012217305,
        -0.008246681,
        -0.02321288,
        -0.027488936,
        -0.040927973,
        -0.043066,
        -0.04184427,
        -0.045814894,
        -0.036651913,
        -0.030848695,
        -0.026572637,
        -0.015882496,
        -0.02565634,
        -0.01863139,
        -0.020463986,
        -0.03481932,
        -0.03268129,
        -0.03481932,
        -0.025350908,
        -0.009162978,
        -0.005192355,
        -0.0021380284,
        -0.004886922,
        -0.0061086523,
        0.00030543262,
        -0.0030543262,
        -0.006414085,
        -0.005192355,
        -0.005192355,
        -0.0070249503,
        -0.004581489,
        0.008552114,
        0.007941248,
        0.014660766,
        0.013744468,
        0.015882496,
        0.02443461,
        0.029626964,
        0.01985312,
        0.025961773,
        0.02687807,
        0.030848695,
        0.035124753,
        0.030848695
    )
    private var gyro_window_y_fixed = doubleArrayOf(
        -9.570731,
        0.7623598,
        0.7623598,
        0.754724,
        0.7632761,
        0.75411314,
        0.7296785,
        0.72387534,
        0.72021013,
        0.79473567,
        0.77946407,
        0.7657196,
        0.7556403,
        0.7449502,
        0.7302894,
        0.7174612,
        0.7049385,
        0.6560693,
        0.57696223,
        0.49938235,
        0.41233405,
        0.34238997,
        0.27122417,
        -0.0033597588,
        -0.095294975,
        -0.07880162,
        -0.061086524,
        -0.062002823,
        -0.059864793,
        -0.06047566,
        -0.06261369,
        -0.059864793,
        -0.06047566,
        -0.06658431,
        -0.054061573,
        -0.056505036,
        -0.05222898,
        -0.0580322,
        -0.05375614,
        -0.048563786,
        -0.039095376,
        -0.03268129,
        -0.032070424,
        -0.027794369,
        -0.026267206,
        -0.024129177,
        -0.015882496,
        -0.01740966,
        -0.014966198,
        -0.0143553335,
        0.00061086525,
        0.013439035,
        0.009162978,
        0.008246681,
        -0.00061086525,
        -0.0033597588,
        -0.004276057,
        -0.009468411,
        -0.013133603,
        -0.014660766,
        -0.021991149,
        -0.021380283,
        -0.03359759,
        -0.03970624,
        -0.03390302,
        -0.036651913,
        -0.039095376,
        -0.034513887,
        -0.03573562,
        -0.027794369,
        -0.01740966,
        -0.018936822,
        -0.016493361,
        -0.0009162979,
        0.003970624,
        0.0067195175,
        0.013133603,
        0.0143553335,
        0.016493361,
        0.003970624,
        0.0033597588,
        0.003970624,
        0.0018325958,
        -0.013133603,
        -0.014049901,
        -0.01160644,
        -0.007330383,
        -0.010079277,
        -0.009162978,
        -0.005497787,
        -0.0036651916,
        0.0018325958,
        0.0012217305,
        0.0012217305,
        0.008246681,
        0.018325957,
        0.012217305,
        0.02076942,
        0.022602014,
        0.021991149,
        0.02565634,
        0.034513887,
        0.043066,
        0.049480084,
        0.049785517,
        0.053145275,
        0.06536258,
        0.06811147,
        0.06994407,
        0.06719518,
        0.0580322,
        0.06566802,
        0.06536258,
        0.06566802,
        0.0693332,
        0.06414085,
        0.08307768,
        0.09010262,
        0.08857546,
        0.09315695,
        0.09285152,
        0.09315695,
        0.09254608,
        0.09040806,
        0.09987647,
        0.095294975,
        0.09682214,
        0.108123146,
        0.10293079,
        0.099265605,
        0.096516706,
        0.106901415,
        0.109650314,
        0.11911872,
        0.12095132,
        0.122783914,
        0.1282817,
        0.1469131,
        0.15210545,
        0.15027285,
        0.16676621,
        0.16798794,
        0.17592919,
        0.18417588,
        0.18997909,
        0.20158553,
        0.21105394,
        0.21044308,
        0.21533,
        0.21899518,
        0.22785273,
        0.22876903,
        0.24098633,
        0.23976462,
        0.23335053,
        0.23762658,
        0.23732115,
        0.23945917,
        0.24740042,
        0.25381452,
        0.26145032,
        0.26450464,
        0.27091873,
        0.2779437,
        0.27580565,
        0.27122417,
        0.27091873,
        0.27275133,
        0.2742785,
        0.2648101,
        0.26542094,
        0.2489276,
        0.24740042,
        0.25259277,
        0.23060162,
        0.22296582,
        0.21746802,
        0.20738874,
        0.2012801,
        0.18936823,
        0.18875736,
        0.19272798,
        0.18509217,
        0.18142697,
        0.1704314,
        0.17287487,
        0.15760323,
        0.15424347,
        0.14080444,
        0.13530666,
        0.13408493,
        0.13591751,
        0.129198,
        0.122478485,
        0.13255776,
        0.13255776,
        0.12522738,
        0.124005646,
        0.121256754,
        0.118202426,
        0.108123146,
        0.09987647,
        0.10903945,
        0.10293079,
        0.11209377,
        0.10934488,
        0.10262536,
        0.10751228,
        0.115453534,
        0.121256754,
        0.119729586,
        0.11942416,
        0.1151481,
        0.101098195,
        0.084910266,
        0.07422013,
        0.06291912,
        0.06291912,
        0.04795292,
        0.03573562,
        0.03726278,
        0.03970624,
        0.044898596,
        0.05681047,
        0.054367006,
        0.05467244,
        0.06414085,
        0.064446285,
        0.06811147,
        0.06078109,
        0.05375614,
        0.0571159,
        0.04917465,
        0.04520403,
        0.044898596,
        0.04795292,
        0.048563786,
        0.059253927,
        0.06414085,
        0.08674286,
        0.10629055,
        0.11881329,
        0.1328632,
        0.14844026,
        0.1685988,
        0.19486602,
        0.21655174,
        0.23426682,
        0.25625798,
        0.2761111,
        0.2947425,
        0.29871312,
        0.301462,
        0.30573806,
        0.30024028,
        0.28985557,
        0.2724459,
        0.27488935,
        0.2678644,
        0.27977628,
        0.2883284,
        0.30757064,
        0.34208453,
        0.38606682,
        0.43585235,
        0.48258355,
        0.53878313,
        0.60139686,
        0.65179324,
        0.6957755,
        0.7357872,
        0.75502944,
        0.768163,
        0.7874053,
        0.7809912,
        0.784351,
        0.786489,
        0.7806858,
        0.7663304,
        0.75441855,
        0.73548174,
        0.72509706,
        0.72112644,
        0.7287622,
        0.7425067,
        0.7528914,
        0.7632761,
        0.7629707,
        0.74372846,
        0.7119634,
        0.6612616,
        0.6282749,
        0.5299256,
        0.410196,
        0.29901853,
        0.23365596,
        0.20219639,
        0.17348573,
        0.13530666,
        0.04886922,
        -0.040317107,
        -0.15393804,
        -0.25320363,
        -0.32711834,
        -0.364992,
        -0.38973203,
        -0.41783184,
        -0.43860126,
        -0.4642576,
        -0.47647488,
        -0.5103779,
        -0.5345071,
        -0.5839872,
        -0.6249151,
        -0.64812803,
        -0.636827,
        -0.58246,
        -0.4810564,
        -0.32711834,
        -0.122783914,
        0.1328632,
        0.40469822,
        0.6420194,
        0.8530733,
        1.0012082,
        1.0833695,
        1.0818423,
        0.9755518,
        0.79504114,
        0.5852089,
        0.47891834,
        0.2941316,
        0.1554652,
        0.11056661,
        0.14782938,
        0.2452624,
        0.33841935,
        0.37598756,
        0.36010507,
        0.33964106,
        0.30970868,
        0.28955013,
        0.26389378,
        0.226631,
        0.17012598,
        0.0842994,
        0.004276057,
        -0.071776666,
        -0.1432479,
        -0.16249016,
        -0.19914207,
        -0.23701571,
        -0.2660318,
        -0.28924468,
        -0.28069258,
        -0.25809056,
        -0.20219639,
        -0.13103059,
        -0.03634648,
        0.06291912,
        0.1423316,
        0.20647246,
        0.25778514,
        0.2929099,
        0.29535335,
        0.27152961,
        0.2415972,
        0.2284636,
        0.23243423,
        0.23823744,
        0.21838433,
        0.17989981,
        0.118202426,
        0.04550946,
        -0.0421497,
        -0.1282817,
        -0.19914207,
        -0.23945917,
        -0.2284636,
        -0.19792034,
        -0.1685988,
        -0.11636983,
        -0.0693332,
        -0.01985312,
        0.026572637,
        0.07971791,
        0.15485434,
        0.22937989,
        0.2660318,
        0.33567044,
        0.35185838,
        0.3463606,
        0.34330627,
        0.39064834,
        0.38973203,
        0.09315695,
        -0.63041294,
        -1.6914859,
        -2.9342911,
        -4.4556513,
        -4.1404448,
        -0.83016586,
        0.5384777,
        0.60139686,
        0.419359,
        0.27488935,
        0.12858713,
        -0.24770586,
        -0.47678033,
        -0.9071349,
        -1.1835514,
        -1.3371841,
        -1.3723087,
        -1.2394456,
        -0.96761054,
        -0.62125,
        -0.29749137,
        -0.08032878,
        0.01985312,
        -0.021685716,
        -0.23090707,
        -0.5815437,
        -0.9388999,
        -1.237613,
        -1.500285,
        -1.7052304,
        -1.8093829,
        -1.7647897,
        -1.676825,
        -1.3903292,
        -0.9868528,
        -0.5552765,
        -0.18997909,
        0.06078109,
        0.22510384,
        0.35827246,
        0.41905355,
        0.4279111,
        0.40225476,
        0.38698313,
        0.42180246,
        0.5164866,
        0.5946773,
        0.6618725,
        0.7281514,
        0.77671516,
        0.77304995,
        0.73426,
        0.63041294,
        0.48472157,
        0.36377025,
        0.30268374,
        0.26389378,
        0.20280726,
        0.10170906,
        -0.03023783,
        -0.14172074,
        -0.24740042,
        -0.3643811,
        -0.51251596,
        -0.6795876,
        -0.8353582,
        -0.9578367,
        -1.0662653,
        -1.1578951,
        -1.2330315,
        -1.2968669,
        -1.3023647,
        -1.2910637,
        -1.258077,
        -1.196685,
        -1.102001,
        -0.99265605,
        -0.88300574,
        -0.7669413,
        -0.64965516,
        -0.5183192,
        -0.38820487,
        -0.28863382,
        -0.18020524,
        -0.05467244,
        0.086132,
        0.2125811,
        0.2919936,
        0.36132678,
        0.44257188,
        0.514654,
        0.5671884,
        0.5708536,
        0.61544675,
        0.6398814,
        0.6973027,
        0.73364913,
        0.7672467,
        0.8237518,
        0.90194255,
        0.9978484,
        1.1120802,
        1.2324207,
        1.3594806,
        1.4416419,
        1.5204436,
        1.5500705,
        1.5314392,
        1.4935656,
        1.4587462,
        1.402852,
        1.3723087,
        1.3845261,
        1.4514158,
        1.6041322,
        1.8664987,
        2.1679606,
        2.4135287,
        2.5103507,
        2.393981,
        2.084883,
        1.6340646,
        1.1695015,
        0.74006325,
        0.38820487,
        0.1337795,
        -0.10720685,
        -0.36163223,
        -0.67347896,
        -0.8304713,
        -1.1691961,
        -1.4899004,
        -1.7217237,
        -1.7849482,
        -1.7318029,
        -1.6914859,
        -1.7030923,
        -1.7449366,
        -1.7605137,
        -1.7217237,
        -1.6588045,
        -1.5894713,
        -1.5048665,
        -1.395827,
        -1.2965615,
        -1.1859949,
        -1.0842859,
        -1.0442741,
        -1.07665,
        -1.1236867,
        -1.284955,
        -1.5225816,
        -1.813048,
        -2.0561724,
        -2.179567,
        -2.1007655,
        -1.8041905,
        -1.4031575,
        -0.9764681,
        -0.59315014,
        -0.2910773,
        -0.13713925,
        -0.1423316,
        -0.26175576,
        -0.4877759,
        -0.7538077,
        -1.0235047,
        -1.2296717,
        -1.3738359,
        -1.4230106,
        -1.455081,
        -1.4581354,
        -1.5161675,
        -1.5619824,
        -1.643533,
        -1.72264,
        -1.7751744,
        -1.7782288,
        -1.7244726,
        -1.6200147,
        -1.4639386,
        -1.2663237,
        -1.0366384,
        -0.79290307,
        -0.5323691,
        -0.3036,
        -0.10995574,
        0.05497787,
        0.12644911,
        0.21930063,
        0.28588495,
        0.3005457,
        0.27122417,
        0.226631,
        0.14569137,
        0.053450707,
        -0.04520403,
        -0.13408493,
        -0.2003638,
        -0.26328292,
        -0.28680122,
        -0.28130344,
        -0.23151793,
        -0.1704314,
        -0.102319926,
        -0.04642576,
        0.009773844,
        0.0290161,
        0.06658431,
        0.08674286,
        0.09468412,
        0.10629055,
        0.12217305,
        0.14844026,
        0.17684549,
        0.22296582,
        0.2761111,
        0.31306845,
        0.33414328,
        0.3323107,
        0.31337386,
        0.30573806,
        0.2751948,
        0.20189096,
        0.109650314,
        0.009162978,
        -0.07391469,
        -0.10934488,
        -0.13561209,
        -0.13347405,
        -0.11942416,
        -0.12217305,
        -0.13500121,
        -0.16920967,
        -0.18753563,
        -0.2012801,
        -0.19792034,
        -0.18051068,
        -0.15027285,
        -0.10293079,
        -0.059253927,
        -0.04153884,
        -0.014660766,
        0.00061086525,
        0.021685716,
        0.044898596,
        0.07696902,
        0.101098195,
        0.14966199,
        0.19914207,
        0.24495697,
        0.2837469,
        0.3005457,
        0.30207285,
        0.30268374,
        0.30818152,
        0.3182608,
        0.3313944,
        0.3454443,
        0.34422258,
        0.34238997,
        0.33078352,
        0.31245756,
        0.28893927,
        0.2687807,
        0.24465153,
        0.2312125,
        0.23090707,
        0.2415972,
        0.25167647,
        0.27122417,
        0.27916542,
        0.269697,
        0.26145032,
        0.2171626,
        0.19456059,
        0.16584991,
        0.14660765,
        0.15424347,
        0.14752395,
        0.15363261,
        0.17256944,
        0.18325958,
        0.18509217,
        0.17959438,
        0.15790866,
        0.12797627,
        0.06688975,
        0.0018325958,
        -0.025045475,
        -0.03970624,
        -0.020463986,
        -0.0106901415,
        0.0030543262,
        0.01160644,
        0.00580322,
        -0.0009162979,
        -0.019547688,
        -0.021991149,
        -0.018325957,
        -0.016493361,
        -0.011911872,
        -0.009468411,
        -0.010079277,
        -0.025045475,
        -0.029626964,
        -0.032986723,
        -0.062002823,
        -0.08093964,
        -0.08979719,
        -0.092240654,
        -0.094989546,
        -0.100792766,
        -0.106901415,
        -0.10262536,
        -0.118507855,
        -0.11178834,
        -0.11056661,
        -0.11026118,
        -0.105068825,
        -0.08277224,
        -0.076358154,
        -0.06566802,
        -0.063224554,
        -0.04520403,
        -0.03848451,
        -0.03573562,
        -0.030543262,
        -0.030543262,
        -0.03359759,
        -0.0290161,
        -0.04153884,
        -0.05375614,
        -0.05955936,
        -0.052839845,
        -0.050396383,
        -0.038179077,
        -0.016187929,
        0.015882496,
        0.020463986,
        -0.040317107,
        -0.090713486,
        -0.12308934,
        -0.10476339,
        -0.08979719,
        -0.0870483,
        -0.07452556,
        -0.0720821,
        -0.061086524,
        -0.0421497,
        -0.036957346,
        -0.028099801,
        -0.03145956,
        -0.044593163,
        -0.046731193,
        -0.04153884,
        -0.029321533,
        -0.013439035,
        0.010995574,
        0.0290161,
        0.0421497,
        0.052839845,
        0.06383542,
        0.06047566,
        0.05375614,
        0.06169739,
        0.06291912,
        0.05100725,
        0.044593163,
        0.020158553,
        -0.01282817,
        -0.022296581,
        -0.023518313,
        -0.010995574,
        0.0021380284,
        0.028405234,
        0.03848451,
        0.040011674,
        0.026572637,
        0.005497787,
        -0.0012217305,
        -0.010079277,
        -0.008552114,
        -0.016798794,
        -0.004276057,
        -0.0067195175,
        0.006414085,
        0.008246681,
        0.03145956,
        0.040011674,
        0.041233405,
        0.038789943,
        0.043982297,
        0.041233405,
        0.03573562,
        0.037873644,
        0.024129177,
        0.033292156,
        0.025961773,
        0.01740966,
        0.0106901415,
        0.015577064,
        0.004886922,
        0.00580322,
        -0.007635815
    )
    private var gyro_window_z_fixed = doubleArrayOf(
        -3.569591,
        0.029321533,
        0.023823744,
        0.034513887,
        0.03848451,
        0.03359759,
        0.033292156,
        0.034208454,
        0.032070424,
        0.057726767,
        0.04886922,
        0.054367006,
        0.07086037,
        0.064446285,
        0.076052725,
        0.08552113,
        0.08857546,
        0.09743301,
        0.09712757,
        0.101098195,
        0.09896017,
        0.09773844,
        0.09987647,
        0.052839845,
        0.025350908,
        0.04550946,
        0.050396383,
        0.048258353,
        0.05100725,
        0.048563786,
        0.049785517,
        0.04428773,
        0.036957346,
        0.034208454,
        0.029626964,
        0.019242255,
        0.016187929,
        0.010995574,
        0.013133603,
        0.009468411,
        0.00580322,
        0.0036651916,
        0.004276057,
        0.008552114,
        0.004581489,
        0.008552114,
        0.0027488936,
        0.009773844,
        0.0018325958,
        0.0070249503,
        0.012217305,
        0.01863139,
        0.015882496,
        0.014660766,
        0.013439035,
        0.01863139,
        0.01863139,
        0.016798794,
        0.011301007,
        0.013133603,
        0.005192355,
        0.003970624,
        -0.00061086525,
        -0.0030543262,
        -0.008246681,
        -0.02107485,
        -0.02076942,
        -0.027794369,
        -0.028710667,
        -0.0290161,
        -0.0290161,
        -0.03634648,
        -0.03481932,
        -0.03634648,
        -0.03940081,
        -0.03604105,
        -0.029626964,
        -0.027488936,
        -0.024740042,
        -0.02076942,
        -0.023823744,
        -0.02687807,
        -0.010995574,
        -0.016493361,
        -0.015271631,
        -0.013439035,
        -0.014049901,
        -0.01038471,
        -0.008246681,
        -0.008857546,
        -0.003970624,
        -0.0021380284,
        -0.005497787,
        -0.002443461,
        0.0012217305,
        0.00061086525,
        -0.0021380284,
        -0.0021380284,
        -0.00061086525,
        0.00580322,
        -0.00061086525,
        0.01160644,
        0.011301007,
        0.010079277,
        0.01282817,
        0.008246681,
        0.013133603,
        0.01282817,
        0.006414085,
        0.011911872,
        0.0027488936,
        0.0067195175,
        -0.003970624,
        -0.008552114,
        -0.0106901415,
        -0.0106901415,
        -0.012217305,
        -0.019547688,
        -0.020463986,
        -0.025961773,
        -0.02443461,
        -0.032375857,
        -0.030543262,
        -0.03970624,
        -0.0290161,
        -0.036957346,
        -0.044898596,
        -0.040927973,
        -0.04520403,
        -0.047036625,
        -0.052839845,
        -0.056199603,
        -0.0571159,
        -0.062002823,
        -0.059864793,
        -0.05222898,
        -0.05222898,
        -0.048258353,
        -0.035124753,
        -0.048563786,
        -0.0421497,
        -0.040317107,
        -0.03970624,
        -0.036957346,
        -0.035430185,
        -0.020158553,
        -0.021991149,
        -0.022296581,
        -0.018325957,
        -0.016798794,
        -0.0143553335,
        -0.024129177,
        -0.022907447,
        -0.029932396,
        -0.032375857,
        -0.03970624,
        -0.04337143,
        -0.04917465,
        -0.056199603,
        -0.058948494,
        -0.056199603,
        -0.05497787,
        -0.050701816,
        -0.045814894,
        -0.041233405,
        -0.040011674,
        -0.02687807,
        -0.02107485,
        -0.0143553335,
        -0.014049901,
        -0.007330383,
        -0.009162978,
        -0.008552114,
        -0.004276057,
        -0.007330383,
        -0.01282817,
        -0.022907447,
        -0.028710667,
        -0.036651913,
        -0.05222898,
        -0.0580322,
        -0.059253927,
        -0.07422013,
        -0.07269296,
        -0.084910266,
        -0.0870483,
        -0.080634214,
        -0.084910266,
        -0.0870483,
        -0.08674286,
        -0.086437434,
        -0.07360926,
        -0.06658431,
        -0.06658431,
        -0.059864793,
        -0.044898596,
        -0.034513887,
        -0.028099801,
        -0.020463986,
        -0.015577064,
        -0.014966198,
        -0.009773844,
        0.0036651916,
        0.0015271631,
        0.0021380284,
        0.007941248,
        0.004276057,
        -0.003970624,
        0.0012217305,
        0.0012217305,
        -0.008857546,
        -0.011301007,
        -0.01282817,
        -0.013744468,
        -0.022907447,
        -0.02321288,
        -0.031154128,
        -0.03573562,
        -0.040927973,
        -0.045814894,
        -0.04062254,
        -0.04062254,
        -0.041233405,
        -0.040927973,
        -0.03634648,
        -0.035124753,
        -0.031154128,
        -0.029321533,
        -0.012217305,
        -0.009773844,
        -0.0027488936,
        -0.0067195175,
        -0.002443461,
        -0.008246681,
        -0.0076358155,
        -0.007330383,
        -0.01282817,
        -0.015271631,
        -0.024129177,
        -0.020158553,
        -0.015882496,
        -0.020463986,
        -0.017104227,
        -0.01863139,
        -0.01740966,
        -0.017104227,
        -0.012217305,
        -0.008552114,
        -0.014049901,
        -0.012217305,
        -0.021685716,
        -0.025045475,
        -0.026267206,
        -0.030848695,
        -0.04184427,
        -0.059253927,
        -0.07819075,
        -0.09437868,
        -0.1133155,
        -0.1328632,
        -0.15332718,
        -0.16279559,
        -0.18661933,
        -0.20555615,
        -0.2171626,
        -0.23976462,
        -0.24801129,
        -0.26083946,
        -0.27091873,
        -0.28405234,
        -0.29352075,
        -0.2941316,
        -0.30268374,
        -0.31673363,
        -0.32284227,
        -0.3210097,
        -0.31612277,
        -0.3155119,
        -0.30451632,
        -0.28802297,
        -0.24831672,
        -0.21380283,
        -0.16340645,
        -0.11484267,
        -0.070249505,
        -0.028405234,
        0.01160644,
        0.055283304,
        0.112399206,
        0.16340645,
        0.22693644,
        0.2556471,
        0.33078352,
        0.41141775,
        0.5027421,
        0.6041457,
        0.7156286,
        0.7974846,
        0.86590147,
        0.9193522,
        0.95814216,
        0.9764681,
        0.9984592,
        1.0082331,
        1.0048733,
        0.98929626,
        0.96577793,
        0.9230174,
        0.8784242,
        0.83169305,
        0.77824235,
        0.7440339,
        0.6588182,
        0.54305923,
        0.42943826,
        0.3118467,
        0.2302962,
        0.17867808,
        0.15424347,
        0.1255328,
        0.093462385,
        0.08277224,
        0.07086037,
        0.09193522,
        0.116675265,
        0.1328632,
        0.16126843,
        0.18203785,
        0.19547687,
        0.21013765,
        0.21685717,
        0.23487769,
        0.22113322,
        0.16187929,
        0.06352998,
        -0.03390302,
        -0.07849618,
        -0.08093964,
        -0.07269296,
        -0.055588737,
        -0.021991149,
        0.03390302,
        0.1001819,
        0.1685988,
        0.2406809,
        0.30207285,
        0.33353242,
        0.3231477,
        0.30848694,
        0.28496864,
        0.27763826,
        0.2883284,
        0.30695978,
        0.3042109,
        0.3005457,
        0.27122417,
        0.25045475,
        0.22632557,
        0.20616703,
        0.1966986,
        0.18845193,
        0.18845193,
        0.1881465,
        0.19181168,
        0.18142697,
        0.16187929,
        0.13805555,
        0.09621128,
        0.055588737,
        -0.0012217305,
        -0.023518313,
        -0.0720821,
        -0.13194689,
        -0.20861048,
        -0.2669481,
        -0.33567044,
        -0.39278635,
        -0.462425,
        -0.5366451,
        -0.5934556,
        -0.64476824,
        -0.68386364,
        -0.7076874,
        -0.73426,
        -0.7498371,
        -0.7672467,
        -0.77854776,
        -0.7715228,
        -0.7507534,
        -0.7171558,
        -0.6951646,
        -0.625526,
        -0.5216789,
        -0.3866777,
        -0.23640485,
        -0.07086037,
        0.19761491,
        0.5500842,
        0.5308419,
        -0.6215554,
        -2.313652,
        -1.9233092,
        -0.09162979,
        0.7644979,
        0.5500842,
        0.07819075,
        -0.25350907,
        -0.5537493,
        -0.90285885,
        -1.1215485,
        -1.5552629,
        -1.9025398,
        -2.1108449,
        -2.2018638,
        -2.2348504,
        -2.2177463,
        -2.1691825,
        -2.1316142,
        -2.169488,
        -2.2739458,
        -2.4016168,
        -2.5485299,
        -2.6639833,
        -2.6703975,
        -2.519819,
        -2.303573,
        -2.0622811,
        -1.8393153,
        -1.7385225,
        -1.5757269,
        -1.4648548,
        -1.4056009,
        -1.3277156,
        -1.2119566,
        -1.1123856,
        -1.0351112,
        -0.97585726,
        -0.9443977,
        -0.945314,
        -1.0002918,
        -1.1026118,
        -1.2400564,
        -1.3930782,
        -1.5109752,
        -1.5928311,
        -1.6401732,
        -1.6600263,
        -1.6841555,
        -1.6896533,
        -1.7171422,
        -1.7458528,
        -1.7773124,
        -1.7849482,
        -1.7867808,
        -1.7800614,
        -1.7849482,
        -1.7626517,
        -1.7314975,
        -1.704925,
        -1.6875153,
        -1.6771306,
        -1.666135,
        -1.6450601,
        -1.6551393,
        -1.65911,
        -1.670411,
        -1.6856827,
        -1.704925,
        -1.7189748,
        -1.7510452,
        -1.7809776,
        -1.8102992,
        -1.8249599,
        -1.8167132,
        -1.8099937,
        -1.8203784,
        -1.8310685,
        -1.8545868,
        -1.8716911,
        -1.8872682,
        -1.9016235,
        -1.9654589,
        -2.1010711,
        -2.2223277,
        -2.257147,
        -2.189341,
        -2.0680842,
        -1.9456058,
        -1.8939877,
        -1.7718146,
        -1.7385225,
        -1.6792686,
        -1.6029104,
        -1.5149459,
        -1.4523321,
        -1.3808609,
        -1.3261884,
        -1.2916746,
        -1.2470814,
        -1.2131784,
        -1.1710287,
        -1.1297953,
        -1.0601566,
        -0.9828822,
        -0.89827734,
        -0.8258898,
        -0.79076505,
        -0.7715228,
        -0.7984009,
        -0.8402451,
        -0.9016371,
        -0.96791595,
        -1.1065824,
        -1.2895365,
        -1.5176947,
        -1.738828,
        -1.9181169,
        -2.0415115,
        -2.1044307,
        -2.1245892,
        -2.1197023,
        -2.1105394,
        -2.0821342,
        -2.0500638,
        -2.0011945,
        -1.9373591,
        -1.9034561,
        -1.8341229,
        -1.7608191,
        -1.7192802,
        -1.7394388,
        -1.772731,
        -1.8106046,
        -1.8594738,
        -1.8887954,
        -1.890628,
        -1.8897116,
        -1.8829921,
        -1.8625281,
        -1.8176296,
        -1.7379116,
        -1.6462818,
        -1.5329664,
        -1.400714,
        -1.2495248,
        -1.0925325,
        -1.0173961,
        -0.88270026,
        -0.788627,
        -0.7330383,
        -0.70616025,
        -0.70371675,
        -0.72021013,
        -0.7244862,
        -0.7480045,
        -0.7770206,
        -0.7993172,
        -0.8060367,
        -0.7812967,
        -0.7458665,
        -0.71959925,
        -0.6939429,
        -0.6533204,
        -0.56382865,
        -0.44043383,
        -0.38240165,
        -0.28252518,
        -0.19822577,
        -0.09285152,
        -0.049785517,
        0.02107485,
        0.10720685,
        0.1994475,
        0.28802297,
        0.37293324,
        0.44837508,
        0.52564955,
        0.5992588,
        0.6554584,
        0.70157874,
        0.7360926,
        0.7443393,
        0.72021013,
        0.6719518,
        0.61636305,
        0.5821546,
        0.47250426,
        0.43799037,
        0.38026363,
        0.31978795,
        0.27122417,
        0.21135938,
        0.15393804,
        0.07422013,
        0.009162978,
        -0.04428773,
        -0.099571034,
        -0.14477506,
        -0.19303341,
        -0.23793201,
        -0.26175576,
        -0.28038713,
        -0.28955013,
        -0.27366763,
        -0.23701571,
        -0.22052236,
        -0.16920967,
        -0.06047566,
        -0.018936822,
        0.06169739,
        0.14905111,
        0.23182335,
        0.30543262,
        0.3717115,
        0.4373795,
        0.48441613,
        0.50335294,
        0.48441613,
        0.45845437,
        0.42058071,
        0.3830125,
        0.33628133,
        0.26236662,
        0.18967366,
        0.17531833,
        0.17470746,
        0.20891592,
        0.24709499,
        0.2828306,
        0.30482176,
        0.3203988,
        0.33200526,
        0.32589662,
        0.32070425,
        0.3100141,
        0.2855795,
        0.2724459,
        0.25717425,
        0.2312125,
        0.21533,
        0.19120082,
        0.1685988,
        0.13744467,
        0.10354166,
        0.089186326,
        0.0720821,
        0.043982297,
        0.018325957,
        -0.0021380284,
        -0.031154128,
        -0.05681047,
        -0.08307768,
        -0.10842858,
        -0.13072516,
        -0.1469131,
        -0.16737708,
        -0.17684549,
        -0.183565,
        -0.19792034,
        -0.21288654,
        -0.2134974,
        -0.20738874,
        -0.20066923,
        -0.20066923,
        -0.19639318,
        -0.1777618,
        -0.15760323,
        -0.115453534,
        -0.07574729,
        -0.03604105,
        -0.0021380284,
        0.025045475,
        0.0421497,
        0.061391957,
        0.07544186,
        0.0852157,
        0.101098195,
        0.11728613,
        0.13530666,
        0.14782938,
        0.15760323,
        0.17134771,
        0.18875736,
        0.19761491,
        0.19028452,
        0.1826487,
        0.16401732,
        0.15271631,
        0.15210545,
        0.15088372,
        0.14782938,
        0.13958271,
        0.12095132,
        0.09773844,
        0.06994407,
        0.043066,
        0.024740042,
        0.0015271631,
        -0.021685716,
        -0.03268129,
        -0.04520403,
        -0.055283304,
        -0.06169739,
        -0.07574729,
        -0.07941248,
        -0.076052725,
        -0.0842994,
        -0.087964594,
        -0.08277224,
        -0.07391469,
        -0.07452556,
        -0.07238753,
        -0.070249505,
        -0.07391469,
        -0.06291912,
        -0.057726767,
        -0.053145275,
        -0.051923547,
        -0.046731193,
        -0.03848451,
        -0.030848695,
        -0.021685716,
        -0.017104227,
        -0.015882496,
        -0.02107485,
        -0.0125227375,
        0.011911872,
        0.016187929,
        0.023518313,
        0.01863139,
        0.016187929,
        0.0125227375,
        0.01038471,
        0.013744468,
        0.0125227375,
        0.028099801,
        0.03145956,
        0.015577064,
        -0.016798794,
        -0.043676864,
        -0.050396383,
        -0.05100725,
        -0.053450707,
        -0.04550946,
        -0.04917465,
        -0.0571159,
        -0.06841691,
        -0.0693332,
        -0.07941248,
        -0.09193522,
        -0.102319926,
        -0.11484267,
        -0.12950343,
        -0.13439035,
        -0.14019357,
        -0.13988814,
        -0.14080444,
        -0.14569137,
        -0.1328632,
        -0.1328632,
        -0.129198,
        -0.1301143,
        -0.12064589,
        -0.10934488,
        -0.09682214,
        -0.089186326,
        -0.07788532,
        -0.07819075,
        -0.07513642,
        -0.06688975,
        -0.06719518,
        -0.049480084,
        -0.03940081,
        -0.026267206,
        -0.029321533,
        -0.029321533,
        -0.03176499,
        -0.03176499,
        -0.029626964,
        -0.035124753,
        -0.03390302,
        -0.03940081,
        -0.043982297,
        -0.05100725,
        -0.055283304,
        -0.06505715,
        -0.06414085,
        -0.065973446,
        -0.07574729,
        -0.08124508,
        -0.07880162,
        -0.086437434,
        -0.096516706,
        -0.09865474,
        -0.094989546,
        -0.103847094,
        -0.099265605,
        -0.09896017,
        -0.093767814,
        -0.08552113,
        -0.08796459
    )

    private var acc_window_x = emptyList<Float>()
    private var acc_window_y = emptyList<Float>()
    private var acc_window_z = emptyList<Float>()
    private var acc_timestamps = emptyList<Long>()

    private var gyro_window_x = emptyList<Float>()
    private var gyro_window_y = emptyList<Float>()
    private var gyro_window_z = emptyList<Float>()
    private var gyro_timestamps = emptyList<Long>()

    private var isAccWindowFull = false
    private var isGyroWindowFull = false

    private var prediction = -1
    private var predictionCooldown = false

    private var print: Int = 0

    private var predictionQue: MutableList<Int> = mutableListOf()
    private var threshold: Int = 4
    val duration = 60

    private lateinit var sensorManager: SensorManager

    init {
        viewModelScope.launch {
            _state.collect { fallState ->
                if (fallState.fallAlertStatus == "detected") {
                    _state.update { it.copy(fallAlertStatus = "countDown", countDown = duration) }

                    while (true) {
                        if (_state.value.fallAlertStatus == "safe") break
                        if (_state.value.countDown == 0) {
                            sendFallAlert()
                            _state.update { it.copy(fallAlertStatus = "safe", countDown = -1) }
                            break
                        }
                        delay(1000)
                        _state.update { it.copy(countDown = it.countDown - 1) }
                    }
                }
                Log.d("FallPrediction", predictionQue.toString())
            }
        }
    }

    private fun setUpSensorStuff() {
        sensorManager = application.getSystemService(SENSOR_SERVICE) as SensorManager

        sensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER)?.also { accelerometer ->
            sensorManager.registerListener(
                this,
                accelerometer,
                SensorManager.SENSOR_DELAY_FASTEST,
                SensorManager.SENSOR_DELAY_UI
            )
        }

        sensorManager.getDefaultSensor(Sensor.TYPE_GYROSCOPE)?.also { gyroscope ->
            sensorManager.registerListener(
                this,
                gyroscope,
                SensorManager.SENSOR_DELAY_FASTEST,
                SensorManager.SENSOR_DELAY_UI
            )
        }

    }

    private fun getPrediction(
        acc_window_x: List<Float>, acc_window_y: List<Float>, acc_window_z: List<Float>,
        gyro_window_x: List<Float>, gyro_window_y: List<Float>, gyro_window_z: List<Float>
    ) {
        predictionCooldown = true
        CoroutineScope(Dispatchers.Main).launch {
            delay(1000)
            predictionCooldown = false
        }
        CoroutineScope(Dispatchers.IO).launch {
            try {
                val rawInput =
                    (summarizeWindow(acc_window_x, acc_window_y, acc_window_z) + summarizeWindow(
                        gyro_window_x,
                        gyro_window_y,
                        gyro_window_z
                    )).toMutableList()

                // Standardize the input data
                val standardizedInput = rawInput.mapIndexed { index, value ->
                    (value - meanArray[index]) / stdArray[index]
                }.toFloatArray()
                if (print <= 2) {
                    Log.d("features", "Standardize: " + standardizedInput.joinToString(", "))
                    print = print + 1;
                }
                // Load model
                val modelPath = application.filesDir.absolutePath + "/lightgbm_model.onnx"
                application.assets.open("lightgbm_model.onnx").use { inputStream ->
                    val modelFile = application.filesDir.resolve("lightgbm_model.onnx")
                    modelFile.outputStream().use { outputStream ->
                        inputStream.copyTo(outputStream)
                    }
                }
                val env = OrtEnvironment.getEnvironment()
                val session = env.createSession(modelPath, OrtSession.SessionOptions())

                // Run inference
                val inputName = session.inputNames.iterator().next()
                val inputTensor = OnnxTensor.createTensor(env, arrayOf(standardizedInput))
                val results = session.run(mapOf(inputName to inputTensor))

                // Get prediction
                val output = results[0].value as LongArray
                val modelPrediction = output.firstOrNull() ?: -1

                // Update prediction
                CoroutineScope(Dispatchers.Main).launch {
                    prediction = modelPrediction.toInt()
                    _state.update { it.copy(prediction = prediction) }
                    predictionQue.add(prediction)
                    if (predictionQue.size >= threshold) {
                        predictionQue.removeAt(0)
                    }
                    if (isFall(predictionQue)) {
                        _state.update { it.copy(fallAlertStatus = "detected") }
                    }
                }

                // Clean up resources
                results.close()
                session.close()
                env.close()
            } catch (e: Exception) {
                CoroutineScope(Dispatchers.Main).launch {
                    Toast.makeText(application, "Error: ${e.message}", Toast.LENGTH_SHORT).show()
                }
            }
        }
    }

    fun isFall(list: List<Int>): Boolean {
        if (list.size == 0) return false
        var fall: Boolean = true
        list.forEach { prediction ->
            if (prediction != 3 && prediction != 4 && prediction != 8) {
                fall = false
            }
        }
        return fall
    }

    fun onCancel() {
        viewModelScope.launch {
            _state.update { it.copy(fallAlertStatus = "safe", countDown = -1) }
        }
    }

    suspend fun sendFallAlert() {
        val currentUser = userDao.getCurrentUser()?.users

        val alertId = alertDao.insertAlert(
            Alerts(
                description = "Automatic Fall Detection",
                type = AlertType.FALL.toName(),
                sentTime = LocalDateTime.now(),
                isSent = true,
            )
        )

        if (currentUser != null) {
            activeUserManager.activeUsers.value.values.forEach { ip ->
                clientRepository.sendAlert(
                    AlertData(
                        alertType = AlertType.FALL.toName(),
                        alertDescription = "Automatic Fall Detection",
                        alertTime = LocalDateTime.now(),
                        alertSenderFName = currentUser.fName,
                        alertSenderLName = currentUser.lName ?: "",
                        alertSenderPuKey = currentUser.UUID,
                        alertHops = 0,
                        alertId = alertId.toInt()
                    ),
                    neighborIp = ip
                )
            }
        }
    }

    override fun onSensorChanged(event: SensorEvent?) {
        when (event?.sensor?.type) {
            Sensor.TYPE_ACCELEROMETER -> {
                _state.update { it.copy(accReadings = event.values.clone()) }

                if (acc_window_x.isEmpty() || !isAccWindowFull) {
                    acc_window_x += event.values[0]
                    acc_window_y += event.values[1]
                    acc_window_z += event.values[2]
                    acc_timestamps += event.timestamp
                }
                if (acc_window_x.isNotEmpty() && event.timestamp - acc_timestamps[0] >= 4000000000) {
                    isAccWindowFull = true
                }
            }

            Sensor.TYPE_GYROSCOPE -> {
                _state.update { it.copy(gyroReadings = event.values.clone()) }
                if (gyro_window_x.isEmpty() || !isGyroWindowFull) {
                    gyro_window_x += event.values[0]
                    gyro_window_y += event.values[1]
                    gyro_window_z += event.values[2]
                    gyro_timestamps += event.timestamp
                }
                if (gyro_window_x.isNotEmpty() && event.timestamp - gyro_timestamps[0] >= 4000000000) {
                    isGyroWindowFull = true
                }
            }
        }

        if (isAccWindowFull && isGyroWindowFull) {
            if (!predictionCooldown) {
                getPrediction(
                    acc_window_x.toList(), acc_window_y.toList(), acc_window_z.toList(),
                    gyro_window_x.toList(), gyro_window_y.toList(), gyro_window_z.toList()
                )
            }
            acc_window_x = acc_window_x.drop(1)
            acc_window_y = acc_window_y.drop(1)
            acc_window_z = acc_window_z.drop(1)
            acc_timestamps = acc_timestamps.drop(1)

            gyro_window_x = gyro_window_x.drop(1)
            gyro_window_y = gyro_window_y.drop(1)
            gyro_window_z = gyro_window_z.drop(1)
            gyro_timestamps = gyro_timestamps.drop(1)

            isAccWindowFull = false
            isGyroWindowFull = false
        }
    }

    private fun summarizeWindow(
        windowX: List<Float>,
        windowY: List<Float>,
        windowZ: List<Float>
    ): List<Float> {
        val features = mutableListOf<Float>()
        if (windowX.isNotEmpty()) {
            val stdX = windowX.std()
            val stdY = windowY.std()
            val stdZ = windowZ.std()
            val rmsX = windowX.rms()
            val rmsY = windowY.rms()
            val rmsZ = windowZ.rms()
            val skewX = windowX.skewness()
            val skewY = windowY.skewness()
            val skewZ = windowZ.skewness()
            val kurtX = windowX.kurtosis()
            val kurtY = windowY.kurtosis()
            val kurtZ = windowZ.kurtosis()
            val sma =
                (windowX.sumOf { abs(it.toDouble()) } + windowY.sumOf { abs(it.toDouble()) } + windowZ.sumOf {
                    abs(
                        it.toDouble()
                    )
                }) / windowX.size

            val samplingRate = windowX.size / 4.0f

            features.add(stdX)
            features.add(stdY)
            features.add(stdZ)
            features.add(sma.toFloat())
            features.add(rmsX)
            features.add(rmsY)
            features.add(rmsZ)
            features.add(skewX.toFloat())
            features.add(skewY.toFloat())
            features.add(skewZ.toFloat())
            features.add(kurtX.toFloat())
            features.add(kurtY.toFloat())
            features.add(kurtZ.toFloat())

        }
        if (print < 2) {
            Log.d("features", "features" + features.toString())
            print += 1
        }
        return features
    }

    // Extension function to calculate standard deviation for Float
    private fun List<Float>.std(): Float {
        val mean = this.average().toFloat()
        return sqrt(this.sumOf { (it - mean).toDouble().pow(2.0) } / this.size).toFloat()
    }

    // Extension function to calculate RMS for Float
    private fun List<Float>.rms(): Float {
        return sqrt(this.map { it.toDouble().pow(2.0) }.average()).toFloat()
    }

    fun List<Float>.mean(): Double {
        if (this.isEmpty()) throw IllegalArgumentException("Empty list")
        return this.sum().toDouble() / this.size
    }

    fun List<Float>.popStd(): Double {
        val n = this.size
        if (n == 0) throw IllegalArgumentException("Empty list")
        val m = this.mean()
        val variance = this.fold(0.0) { acc, x -> acc + (x - m).pow(2) } / n
        return sqrt(variance)
    }

    fun List<Float>.sampleStd(): Double {
        val n = this.size
        if (n < 2) throw IllegalArgumentException("At least 2 data points required")
        val m = this.mean()
        val variance = this.fold(0.0) { acc, x -> acc + (x - m).pow(2) } / (n - 1)
        return sqrt(variance)
    }

    fun List<Float>.skewness(bias: Boolean = true): Double {
        val n = this.size
        if (n < 2) throw IllegalArgumentException("At least 2 data points required for skewness")
        val m = this.mean()

        return if (bias) {
            // Use population standard deviation (ddof=0)
            val s = this.popStd()
            if (s == 0.0) 0.0
            else {
                val m3 = this.fold(0.0) { acc, x -> acc + (x - m).pow(3) } / n
                m3 / s.pow(3)
            }
        } else {
            if (n < 3) throw IllegalArgumentException("At least 3 data points required for unbiased skewness")
            // Use sample standard deviation (ddof=1)
            val s = this.sampleStd()
            if (s == 0.0) 0.0
            else {
                val m3 = this.fold(0.0) { acc, x -> acc + (x - m).pow(3) } / n
                val skewPop = m3 / s.pow(3)
                // Apply the unbiased adjustment factor.
                sqrt(n.toDouble() * (n - 1)) / (n - 2) * skewPop
            }
        }
    }

    fun List<Float>.kurtosis(bias: Boolean = true, fisher: Boolean = true): Double {
        val n = this.size
        if (n < 2) throw IllegalArgumentException("At least 2 data points required for kurtosis")
        val m = this.mean()

        return if (bias) {
            // Use population standard deviation (ddof=0)
            val s = this.popStd()
            if (s == 0.0) 0.0
            else {
                val m4 = this.fold(0.0) { acc, x -> acc + (x - m).pow(4) } / n
                val kurt = m4 / s.pow(4)
                if (fisher) kurt - 3 else kurt
            }
        } else {
            if (n < 4) throw IllegalArgumentException("At least 4 data points required for unbiased kurtosis")
            // Use sample standard deviation (ddof=1)
            val s = this.sampleStd()
            if (s == 0.0) 0.0
            else {
                val m4 = this.fold(0.0) { acc, x -> acc + (x - m).pow(4) } / n
                // Compute excess kurtosis (using sample std but 1/n divisor for the moment)
                val kurtPop = m4 / s.pow(4) - 3
                // Apply the unbiased correction factor (per Joanes and Gill, 1998)
                val G2 = ((n - 1).toDouble() / ((n - 2) * (n - 3))) * ((n + 1) * kurtPop + 6)
                if (fisher) G2 else G2 + 3
            }
        }
    }


    override fun onAccuracyChanged(p0: Sensor?, p1: Int) {

    }

    init {
        setUpSensorStuff()
    }
}